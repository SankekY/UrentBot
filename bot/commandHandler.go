package bot

import (
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

var AwaitMessage = map[string]string{
	"start_admin": `
		üîª ___ RGL Mode ___ üîª

		üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

		üõ† /rgl ‚Äî –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∞–∫—Ç–∏–≤–Ω—ã–º –°–∫–∞—É—Ç–∞–º
		üìà /stats ‚Äî –ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
		‚îú üîÑ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
		‚îú üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞–Ω–∏—è  
		‚îú üïê –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã
		‚îú üí• –ü—Ä–æ—ë–±—ã 
		‚îî (—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–±—Ä–æ—Å–∞)

		‚ôªÔ∏è /restats ‚Äî –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
		üî∫ ____________________ üî∫
	`,
	"start_scaut": `
	üîª ___ *Scaut Mode* ___ üîª
	‚îÇ
	‚îÇ üìå */info* ‚Üí –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ 
	‚îÇ (–±–µ–∑ —Å–±—Ä–æ—Å–∞ —Å–º–µ–Ω—ã)             
	‚îÇ                                   
	‚îÇ üìù */report* ‚Üí –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É –∏  
	‚îÇ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç            
	‚îÇ                                   
	‚îÇ üîî */sub* ‚Üí –ê–≤—Ç–æ-–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ 
	‚îÇ (–ø—Ä–∏—à–ª—ë—Ç –æ—Ç—á—ë—Ç –≤ –õ–°, –µ—Å–ª–∏      
	‚îÇ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–º–µ–Ω—É –∑–∞ 1.5 —á–∞—Å–∞)
	‚îÇ                                  
	üî∫ ____________________ üî∫
	`,
}

func (b *Bot) CMDHanlder(msg tgbotapi.Message) {
	b.wg.Add(1)
	switch msg.Command() {
	case "start":
		go b.CMDStart(msg)

	case "info":
		go b.CMDInfo(msg)

	case "report":
		go b.CMDReport(msg)
	case "sub":
		b.CMDSubs(msg)
	default:
		if b.cfg.Admins[msg.From.ID] {
			switch msg.Command() {
			case "rgl":
				go b.CMDRgl(msg)
			case "stats":
				go b.CMDStats(msg)

			case "restats":
				go b.CMDRestats(msg)

			default:
				b.bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–ù–µ –ø–æ–Ω—è—Ç–Ω–∞—è –∫–æ–º–º–∞–Ω–¥–∞ –Ω–∞–ø–∏—à–∏—Ç–µ \n/start -–î–ª—è –ø—Ä–æ—Å–º—Ç–æ—Ä–∞ –∫–æ–º–º–∞–Ω–¥"))
			}
			return
		} else {
			b.bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–ù–µ –ø–æ–Ω—è—Ç–Ω–∞—è –∫–æ–º–º–∞–Ω–¥–∞ –Ω–∞–ø–∏—à–∏—Ç–µ \n/start -–î–ª—è –ø—Ä–æ—Å–º—Ç–æ—Ä–∞ –∫–æ–º–º–∞–Ω–¥"))
		}

	}
}

func (b *Bot) CMDStart(msg tgbotapi.Message) {
	defer b.wg.Done()

	if !b.cfg.Admins[msg.From.ID] {
		b.bot.Send(tgbotapi.NewMessage(msg.Chat.ID, AwaitMessage["start_scaut"]))
		return
	}
	b.bot.Send(tgbotapi.NewMessage(msg.Chat.ID, AwaitMessage["start_admin"]))
}

func (b *Bot) CMDSubs(msg tgbotapi.Message) {
	subber, ok := Subs[msg.From.UserName]
	if ok {
		if subber == 0 {
			Subs[msg.From.UserName] = msg.Chat.ID
			b.bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã –Ω–∞ –æ—Ç—á—ë—Ç—ã :)"))
			return
		}
		Subs[msg.From.UserName] = 0
		b.bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–í—ã –æ—Ç–ø–∏—Å–∞–Ω—ã –Ω–∞ –æ—Ç—á—ë—Ç—ã :)"))
		return
	}
	Subs[msg.From.UserName] = msg.Chat.ID
	b.bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–í—ã –ø–æ—Ç–ø–∏—Å–∞–Ω—ã –Ω–∞ –æ—Ç—á—ë—Ç—ã :)"))

}

func (b *Bot) CMDRgl(msg tgbotapi.Message) {
	b.muScauts.Lock()
	defer b.wg.Done()
	defer b.muScauts.Unlock()

	message := tgbotapi.NewMessage(msg.Chat.ID, "")

	message.Text += b.RGLStats(Scauts)

	b.bot.Send(message)
}

func (b *Bot) CMDReport(msg tgbotapi.Message) {
	b.muScauts.Lock()
	defer b.wg.Done()
	defer b.muScauts.Unlock()

	scaut := Scauts[msg.From.ID]

	// RGL Messsage
	if scaut.UserName != "" {

		MsgForAdmin := tgbotapi.NewMessage(b.cfg.AdminChannel, "")
		MsgForAdmin.Text = b.GenerateReportRGL(scaut)
		b.bot.Send(MsgForAdmin)

	}

	// SCAUT Message

	message := tgbotapi.NewMessage(msg.Chat.ID, "")
	message.Text = b.GenerateReportScaut(scaut)
	b.bot.Send(message)

	b.AddStat(scaut, msg.From.ID)
	Scauts[msg.From.ID] = Scaut{}
}

func (b *Bot) CMDInfo(msg tgbotapi.Message) {
	b.muScauts.Lock()
	defer b.wg.Done()
	defer b.muScauts.Unlock()

	user := Scauts[msg.From.ID]
	message := tgbotapi.NewMessage(msg.Chat.ID, "")
	message.Text = b.GenerateReportScaut(user)
	b.bot.Send(message)
}

func (b *Bot) CMDStats(msg tgbotapi.Message) {
	b.muStats.Lock()
	defer b.wg.Done()
	defer b.muStats.Unlock()

	message := tgbotapi.NewMessage(msg.Chat.ID, "")

	message.Text += GenerateStats(StatScauts)

	b.bot.Send(message)

}

func (b *Bot) CMDRestats(msg tgbotapi.Message) {
	b.muStats.Lock()
	defer b.wg.Done()
	defer b.muStats.Unlock()

	StatScauts = make(map[int64]WendayScaut)

	b.bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∞ !"))
}
